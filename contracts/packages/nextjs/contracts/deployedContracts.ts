/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  1: {
    FlatPriceSaleFactory_v_2_1: {
      address: "0x70E0E5a16c981eFF0720f226A2E8ff418B5f3954",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_implementation",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "implementation",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract FlatPriceSale_v_2_1",
              name: "clone",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "string",
              name: "baseCurrency",
              type: "string",
            },
            {
              indexed: false,
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "nativeOracle",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "nativePaymentsEnabled",
              type: "bool",
            },
          ],
          name: "NewSale",
          type: "event",
        },
        {
          inputs: [],
          name: "VERSION",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "implementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
            {
              internalType: "string",
              name: "_baseCurrency",
              type: "string",
            },
            {
              internalType: "bool",
              name: "_nativePaymentsEnabled",
              type: "bool",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "_nativeTokenPriceOracle",
              type: "address",
            },
            {
              internalType: "contract IERC20Upgradeable[]",
              name: "tokens",
              type: "address[]",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck[]",
              name: "oracles",
              type: "address[]",
            },
            {
              internalType: "uint8[]",
              name: "decimals",
              type: "uint8[]",
            },
          ],
          name: "newSale",
          outputs: [
            {
              internalType: "contract FlatPriceSale_v_2_1",
              name: "sale",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    FlatPriceSale_v_2_1: {
      address: "0x57c08f6827DC9A88b253830D73E0d8314b32E8D1",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_feeBips",
              type: "uint256",
            },
            {
              internalType: "address payable",
              name: "_feeRecipient",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "buyer",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "baseCurrencyValue",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenValue",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenFee",
              type: "uint256",
            },
          ],
          name: "Buy",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address payable",
              name: "feeRecipient",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "feeBips",
              type: "uint256",
            },
          ],
          name: "ImplementationConstructor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "string",
              name: "baseCurrency",
              type: "string",
            },
            {
              indexed: false,
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "nativeOracle",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "nativePaymentsEnabled",
              type: "bool",
            },
          ],
          name: "Initialize",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "distributor",
              type: "address",
            },
          ],
          name: "RegisterDistributor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "contract IOracleOrL2OracleWithSequencerCheck",
                  name: "oracle",
                  type: "address",
                },
                {
                  internalType: "uint8",
                  name: "decimals",
                  type: "uint8",
                },
              ],
              indexed: false,
              internalType: "struct PaymentTokenInfo",
              name: "paymentTokenInfo",
              type: "tuple",
            },
          ],
          name: "SetPaymentTokenInfo",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepNative",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepToken",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
          ],
          name: "Update",
          type: "event",
        },
        {
          inputs: [],
          name: "VERSION",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "baseCurrency",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "buyWithNative",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "quantity",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "buyWithToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "buyerTotal",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "config",
          outputs: [
            {
              internalType: "address payable",
              name: "recipient",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "saleMaximum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "userMaximum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "purchaseMinimum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "maxQueueTime",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "URI",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "merkleRoot",
              type: "bytes32",
            },
          ],
          name: "generatePseudorandomValue",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "buyer",
              type: "address",
            },
          ],
          name: "getFairQueueTime",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
          ],
          name: "getOraclePrice",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
          ],
          name: "getPaymentToken",
          outputs: [
            {
              components: [
                {
                  internalType: "contract IOracleOrL2OracleWithSequencerCheck",
                  name: "oracle",
                  type: "address",
                },
                {
                  internalType: "uint8",
                  name: "decimals",
                  type: "uint8",
                },
              ],
              internalType: "struct PaymentTokenInfo",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
            {
              internalType: "string",
              name: "_baseCurrency",
              type: "string",
            },
            {
              internalType: "bool",
              name: "_nativePaymentsEnabled",
              type: "bool",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "_nativeTokenPriceOracle",
              type: "address",
            },
            {
              internalType: "contract IERC20Upgradeable[]",
              name: "tokens",
              type: "address[]",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck[]",
              name: "oracles",
              type: "address[]",
            },
            {
              internalType: "uint8[]",
              name: "decimals",
              type: "uint8[]",
            },
          ],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "isOpen",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "isOver",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "root",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "isValidMerkleProof",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "metrics",
          outputs: [
            {
              internalType: "uint256",
              name: "purchaseCount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "buyerCount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "purchaseTotal",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nativeTokenPriceOracle",
          outputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "",
              type: "address",
            },
          ],
          name: "paymentTokens",
          outputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
            {
              internalType: "uint8",
              name: "decimals",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "dest",
              type: "address",
            },
          ],
          name: "payments",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_distributor",
              type: "address",
            },
          ],
          name: "registerDistributor",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "sweepNative",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
          ],
          name: "sweepToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenQuantity",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "tokenDecimals",
              type: "uint256",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
          ],
          name: "tokensToBaseCurrency",
          outputs: [
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "total",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
          ],
          name: "update",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address payable",
              name: "payee",
              type: "address",
            },
          ],
          name: "withdrawPayments",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  5: {
    ContinuousVestingMerkleDistributor: {
      address: "0x094532c110A955078c8e66eA16D1b090D4251Cda",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidShortString",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "str",
              type: "string",
            },
          ],
          name: "StringTooLong",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              indexed: false,
              internalType: "int256",
              name: "amount",
              type: "int256",
            },
          ],
          name: "Adjust",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "Claim",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "delegator",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "fromDelegate",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "toDelegate",
              type: "address",
            },
          ],
          name: "DelegateChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "delegate",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "previousBalance",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "newBalance",
              type: "uint256",
            },
          ],
          name: "DelegateVotesChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [],
          name: "EIP712DomainChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "total",
              type: "uint256",
            },
          ],
          name: "InitializeDistributionRecord",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "total",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "uri",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "fractionDenominator",
              type: "uint256",
            },
          ],
          name: "InitializeDistributor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "start",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "cliff",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "end",
              type: "uint256",
            },
          ],
          name: "SetContinuousVesting",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint160",
              name: "maxDelayTime",
              type: "uint160",
            },
          ],
          name: "SetDelay",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bytes32",
              name: "merkleRoot",
              type: "bytes32",
            },
          ],
          name: "SetMerkleRoot",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "recipient",
              type: "address",
            },
          ],
          name: "SetSweepRecipient",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
          ],
          name: "SetToken",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "total",
              type: "uint256",
            },
          ],
          name: "SetTotal",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "string",
              name: "uri",
              type: "string",
            },
          ],
          name: "SetUri",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "voteFactor",
              type: "uint256",
            },
          ],
          name: "SetVoteFactor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepNative",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepToken",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [],
          name: "CLOCK_MODE",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "DOMAIN_SEPARATOR",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "NAME",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "VERSION",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "int256",
              name: "amount",
              type: "int256",
            },
          ],
          name: "adjust",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint32",
              name: "pos",
              type: "uint32",
            },
          ],
          name: "checkpoints",
          outputs: [
            {
              components: [
                {
                  internalType: "uint32",
                  name: "fromBlock",
                  type: "uint32",
                },
                {
                  internalType: "uint224",
                  name: "votes",
                  type: "uint224",
                },
              ],
              internalType: "struct ERC20Votes.Checkpoint",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "index",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "totalAmount",
              type: "uint256",
            },
            {
              internalType: "bytes32[]",
              name: "merkleProof",
              type: "bytes32[]",
            },
          ],
          name: "claim",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "claimed",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "clock",
          outputs: [
            {
              internalType: "uint48",
              name: "",
              type: "uint48",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "subtractedValue",
              type: "uint256",
            },
          ],
          name: "decreaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "delegatee",
              type: "address",
            },
          ],
          name: "delegate",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "delegatee",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "nonce",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "expiry",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "v",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "r",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "s",
              type: "bytes32",
            },
          ],
          name: "delegateBySig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "delegates",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "distancePerSecond",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "eip712Domain",
          outputs: [
            {
              internalType: "bytes1",
              name: "fields",
              type: "bytes1",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "version",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "chainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "verifyingContract",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "salt",
              type: "bytes32",
            },
            {
              internalType: "uint256[]",
              name: "extensions",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "getClaimableAmount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
          ],
          name: "getDistributionRecord",
          outputs: [
            {
              components: [
                {
                  internalType: "bool",
                  name: "initialized",
                  type: "bool",
                },
                {
                  internalType: "uint120",
                  name: "total",
                  type: "uint120",
                },
                {
                  internalType: "uint120",
                  name: "claimed",
                  type: "uint120",
                },
              ],
              internalType: "struct DistributionRecord",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "getFairDelayTime",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getFractionDenominator",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getMerkleRoot",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "timepoint",
              type: "uint256",
            },
          ],
          name: "getPastTotalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "timepoint",
              type: "uint256",
            },
          ],
          name: "getPastVotes",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getSweepRecipient",
          outputs: [
            {
              internalType: "address payable",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalVotes",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "time",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "getVestedFraction",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getVestingConfig",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "getVoteFactor",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "getVotes",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "addedValue",
              type: "uint256",
            },
          ],
          name: "increaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_start",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_cliff",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_end",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint160",
              name: "_maxDelayTime",
              type: "uint160",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "index",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "bytes32[]",
              name: "merkleProof",
              type: "bytes32[]",
            },
          ],
          name: "initializeDistributionRecord",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "maxDelayTime",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "nonces",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "numCheckpoints",
          outputs: [
            {
              internalType: "uint32",
              name: "",
              type: "uint32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "deadline",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "v",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "r",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "s",
              type: "bytes32",
            },
          ],
          name: "permit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "randomValue",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
          ],
          name: "setMerkleRoot",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address payable",
              name: "_recipient",
              type: "address",
            },
          ],
          name: "setSweepRecipient",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
          ],
          name: "setToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
          ],
          name: "setTotal",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
          ],
          name: "setUri",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_start",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_cliff",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_end",
              type: "uint256",
            },
          ],
          name: "setVestingConfig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_voteFactor",
              type: "uint256",
            },
          ],
          name: "setVoteFactor",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "sweepNative",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "sweepNative",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
          ],
          name: "sweepToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "sweepToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "token",
          outputs: [
            {
              internalType: "contract IERC20",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "total",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "uri",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        CLOCK_MODE:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        DOMAIN_SEPARATOR:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        NAME: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        VERSION: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        adjust: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        allowance: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        approve: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        balanceOf: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        checkpoints:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        claimed: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        clock: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        decimals: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        decreaseAllowance:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        delegate: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        delegateBySig:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        delegates: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        distancePerSecond:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        eip712Domain:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        getClaimableAmount:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        getDistributionRecord:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        getFairDelayTime:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        getFractionDenominator:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        getPastTotalSupply:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        getPastVotes:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        getSweepRecipient:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        getTotalVotes:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        getVestedFraction:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        getVestingConfig:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        getVoteFactor:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        getVotes: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        increaseAllowance:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        maxDelayTime:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        name: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        nonces: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        numCheckpoints:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        owner: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        permit: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        randomValue:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        renounceOwnership:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        setSweepRecipient:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        setToken: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        setTotal: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        setUri: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        setVestingConfig:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        setVoteFactor:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        sweepNative:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        sweepToken:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        symbol: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        token: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        total: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        totalSupply:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        transfer: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        transferFrom:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        transferOwnership:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        uri: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        getMerkleRoot: "contracts/claim/factory/MerkleSetInitializable.sol",
      },
    },
    ContinuousVestingMerkleDistributorFactory: {
      address: "0x9d06531B1a30b29FA11629e051C216ff55243581",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "implementation",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "distributor",
              type: "address",
            },
          ],
          name: "DistributorDeployed",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_start",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_cliff",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_end",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint160",
              name: "_maxDelayTime",
              type: "uint160",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_nonce",
              type: "uint256",
            },
          ],
          name: "deployDistributor",
          outputs: [
            {
              internalType: "contract ContinuousVestingMerkleDistributor",
              name: "distributor",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "distributors",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_start",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_cliff",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_end",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint160",
              name: "_maxDelayTime",
              type: "uint160",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_nonce",
              type: "uint256",
            },
          ],
          name: "predictDistributorAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    PerAddressContinuousVestingMerkleDistributor: {
      address: "0x181e6745d984E75dD079499e70feEd0721656d96",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidShortString",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "str",
              type: "string",
            },
          ],
          name: "StringTooLong",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              indexed: false,
              internalType: "int256",
              name: "amount",
              type: "int256",
            },
          ],
          name: "Adjust",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "Claim",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "delegator",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "fromDelegate",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "toDelegate",
              type: "address",
            },
          ],
          name: "DelegateChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "delegate",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "previousBalance",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "newBalance",
              type: "uint256",
            },
          ],
          name: "DelegateVotesChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [],
          name: "EIP712DomainChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "total",
              type: "uint256",
            },
          ],
          name: "InitializeDistributionRecord",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "total",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "uri",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "fractionDenominator",
              type: "uint256",
            },
          ],
          name: "InitializeDistributor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint160",
              name: "maxDelayTime",
              type: "uint160",
            },
          ],
          name: "SetDelay",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bytes32",
              name: "merkleRoot",
              type: "bytes32",
            },
          ],
          name: "SetMerkleRoot",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "recipient",
              type: "address",
            },
          ],
          name: "SetSweepRecipient",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
          ],
          name: "SetToken",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "total",
              type: "uint256",
            },
          ],
          name: "SetTotal",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "string",
              name: "uri",
              type: "string",
            },
          ],
          name: "SetUri",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "voteFactor",
              type: "uint256",
            },
          ],
          name: "SetVoteFactor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepNative",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepToken",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [],
          name: "CLOCK_MODE",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "DOMAIN_SEPARATOR",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "NAME",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "VERSION",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "int256",
              name: "amount",
              type: "int256",
            },
          ],
          name: "adjust",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint32",
              name: "pos",
              type: "uint32",
            },
          ],
          name: "checkpoints",
          outputs: [
            {
              components: [
                {
                  internalType: "uint32",
                  name: "fromBlock",
                  type: "uint32",
                },
                {
                  internalType: "uint224",
                  name: "votes",
                  type: "uint224",
                },
              ],
              internalType: "struct ERC20Votes.Checkpoint",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "index",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "totalAmount",
              type: "uint256",
            },
            {
              internalType: "bytes32[]",
              name: "merkleProof",
              type: "bytes32[]",
            },
          ],
          name: "claim",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "claimed",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "clock",
          outputs: [
            {
              internalType: "uint48",
              name: "",
              type: "uint48",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "subtractedValue",
              type: "uint256",
            },
          ],
          name: "decreaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "delegatee",
              type: "address",
            },
          ],
          name: "delegate",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "delegatee",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "nonce",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "expiry",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "v",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "r",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "s",
              type: "bytes32",
            },
          ],
          name: "delegateBySig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "delegates",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "distancePerSecond",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "eip712Domain",
          outputs: [
            {
              internalType: "bytes1",
              name: "fields",
              type: "bytes1",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "version",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "chainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "verifyingContract",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "salt",
              type: "bytes32",
            },
            {
              internalType: "uint256[]",
              name: "extensions",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "getClaimableAmount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
          ],
          name: "getDistributionRecord",
          outputs: [
            {
              components: [
                {
                  internalType: "bool",
                  name: "initialized",
                  type: "bool",
                },
                {
                  internalType: "uint120",
                  name: "total",
                  type: "uint120",
                },
                {
                  internalType: "uint120",
                  name: "claimed",
                  type: "uint120",
                },
              ],
              internalType: "struct DistributionRecord",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "getFairDelayTime",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getFractionDenominator",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getMerkleRoot",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "timepoint",
              type: "uint256",
            },
          ],
          name: "getPastTotalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "timepoint",
              type: "uint256",
            },
          ],
          name: "getPastVotes",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getSweepRecipient",
          outputs: [
            {
              internalType: "address payable",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalVotes",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "time",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "getVestedFraction",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "getVoteFactor",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "getVotes",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "addedValue",
              type: "uint256",
            },
          ],
          name: "increaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint160",
              name: "_maxDelayTime",
              type: "uint160",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "index",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "bytes32[]",
              name: "merkleProof",
              type: "bytes32[]",
            },
          ],
          name: "initializeDistributionRecord",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "maxDelayTime",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "nonces",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "numCheckpoints",
          outputs: [
            {
              internalType: "uint32",
              name: "",
              type: "uint32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "deadline",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "v",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "r",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "s",
              type: "bytes32",
            },
          ],
          name: "permit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "randomValue",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
          ],
          name: "setMerkleRoot",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address payable",
              name: "_recipient",
              type: "address",
            },
          ],
          name: "setSweepRecipient",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
          ],
          name: "setToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
          ],
          name: "setTotal",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
          ],
          name: "setUri",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_voteFactor",
              type: "uint256",
            },
          ],
          name: "setVoteFactor",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "sweepNative",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "sweepNative",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
          ],
          name: "sweepToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "sweepToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "token",
          outputs: [
            {
              internalType: "contract IERC20",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "total",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "uri",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        CLOCK_MODE:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        DOMAIN_SEPARATOR:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        NAME: "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        VERSION:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        adjust:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        allowance:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        approve:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        balanceOf:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        checkpoints:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        claimed:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        clock:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        decimals:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        decreaseAllowance:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        delegate:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        delegateBySig:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        delegates:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        distancePerSecond:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        eip712Domain:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        getClaimableAmount:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        getDistributionRecord:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        getFairDelayTime:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        getFractionDenominator:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        getPastTotalSupply:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        getPastVotes:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        getSweepRecipient:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        getTotalVotes:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        getVestedFraction:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        getVoteFactor:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        getVotes:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        increaseAllowance:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        maxDelayTime:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        name: "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        nonces:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        numCheckpoints:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        owner:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        permit:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        randomValue:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        renounceOwnership:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        setSweepRecipient:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        setToken:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        setTotal:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        setUri:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        setVoteFactor:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        sweepNative:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        sweepToken:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        symbol:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        token:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        total:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        totalSupply:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        transfer:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        transferFrom:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        transferOwnership:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        uri: "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        getMerkleRoot: "contracts/claim/factory/MerkleSetInitializable.sol",
      },
    },
    PerAddressContinuousVestingMerkleDistributorFactory: {
      address: "0xc65FCD302ED596115C6A75651bD6c75b9c07DDe2",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "implementation",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "distributor",
              type: "address",
            },
          ],
          name: "DistributorDeployed",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint160",
              name: "_maxDelayTime",
              type: "uint160",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_nonce",
              type: "uint256",
            },
          ],
          name: "deployDistributor",
          outputs: [
            {
              internalType:
                "contract PerAddressContinuousVestingMerkleDistributor",
              name: "distributor",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "distributors",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint160",
              name: "_maxDelayTime",
              type: "uint160",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_nonce",
              type: "uint256",
            },
          ],
          name: "predictDistributorAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    PerAddressTrancheVestingMerkleDistributor: {
      address: "0x66A34FdfcF94bf319fC0A4A2B3337c0A9bB6B741",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidShortString",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "str",
              type: "string",
            },
          ],
          name: "StringTooLong",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              indexed: false,
              internalType: "int256",
              name: "amount",
              type: "int256",
            },
          ],
          name: "Adjust",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "Claim",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "delegator",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "fromDelegate",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "toDelegate",
              type: "address",
            },
          ],
          name: "DelegateChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "delegate",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "previousBalance",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "newBalance",
              type: "uint256",
            },
          ],
          name: "DelegateVotesChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [],
          name: "EIP712DomainChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "total",
              type: "uint256",
            },
          ],
          name: "InitializeDistributionRecord",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "total",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "uri",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "fractionDenominator",
              type: "uint256",
            },
          ],
          name: "InitializeDistributor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint160",
              name: "maxDelayTime",
              type: "uint160",
            },
          ],
          name: "SetDelay",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bytes32",
              name: "merkleRoot",
              type: "bytes32",
            },
          ],
          name: "SetMerkleRoot",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "recipient",
              type: "address",
            },
          ],
          name: "SetSweepRecipient",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
          ],
          name: "SetToken",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "total",
              type: "uint256",
            },
          ],
          name: "SetTotal",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "index",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint128",
              name: "time",
              type: "uint128",
            },
            {
              indexed: false,
              internalType: "uint128",
              name: "VestedFraction",
              type: "uint128",
            },
          ],
          name: "SetTranche",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "string",
              name: "uri",
              type: "string",
            },
          ],
          name: "SetUri",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "voteFactor",
              type: "uint256",
            },
          ],
          name: "SetVoteFactor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepNative",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepToken",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [],
          name: "CLOCK_MODE",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "DOMAIN_SEPARATOR",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "NAME",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "VERSION",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "int256",
              name: "amount",
              type: "int256",
            },
          ],
          name: "adjust",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint32",
              name: "pos",
              type: "uint32",
            },
          ],
          name: "checkpoints",
          outputs: [
            {
              components: [
                {
                  internalType: "uint32",
                  name: "fromBlock",
                  type: "uint32",
                },
                {
                  internalType: "uint224",
                  name: "votes",
                  type: "uint224",
                },
              ],
              internalType: "struct ERC20Votes.Checkpoint",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "index",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "totalAmount",
              type: "uint256",
            },
            {
              internalType: "bytes32[]",
              name: "merkleProof",
              type: "bytes32[]",
            },
          ],
          name: "claim",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "claimed",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "clock",
          outputs: [
            {
              internalType: "uint48",
              name: "",
              type: "uint48",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "subtractedValue",
              type: "uint256",
            },
          ],
          name: "decreaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "delegatee",
              type: "address",
            },
          ],
          name: "delegate",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "delegatee",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "nonce",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "expiry",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "v",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "r",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "s",
              type: "bytes32",
            },
          ],
          name: "delegateBySig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "delegates",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "distancePerSecond",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "eip712Domain",
          outputs: [
            {
              internalType: "bytes1",
              name: "fields",
              type: "bytes1",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "version",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "chainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "verifyingContract",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "salt",
              type: "bytes32",
            },
            {
              internalType: "uint256[]",
              name: "extensions",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "getClaimableAmount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
          ],
          name: "getDistributionRecord",
          outputs: [
            {
              components: [
                {
                  internalType: "bool",
                  name: "initialized",
                  type: "bool",
                },
                {
                  internalType: "uint120",
                  name: "total",
                  type: "uint120",
                },
                {
                  internalType: "uint120",
                  name: "claimed",
                  type: "uint120",
                },
              ],
              internalType: "struct DistributionRecord",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "getFairDelayTime",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getFractionDenominator",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getMerkleRoot",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "timepoint",
              type: "uint256",
            },
          ],
          name: "getPastTotalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "timepoint",
              type: "uint256",
            },
          ],
          name: "getPastVotes",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getSweepRecipient",
          outputs: [
            {
              internalType: "address payable",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalVotes",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "getTranche",
          outputs: [
            {
              components: [
                {
                  internalType: "uint128",
                  name: "time",
                  type: "uint128",
                },
                {
                  internalType: "uint128",
                  name: "vestedFraction",
                  type: "uint128",
                },
              ],
              internalType: "struct Tranche",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "getTranches",
          outputs: [
            {
              components: [
                {
                  internalType: "uint128",
                  name: "time",
                  type: "uint128",
                },
                {
                  internalType: "uint128",
                  name: "vestedFraction",
                  type: "uint128",
                },
              ],
              internalType: "struct Tranche[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "time",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "getVestedFraction",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "getVoteFactor",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "getVotes",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "addedValue",
              type: "uint256",
            },
          ],
          name: "increaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint160",
              name: "_maxDelayTime",
              type: "uint160",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "index",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "bytes32[]",
              name: "merkleProof",
              type: "bytes32[]",
            },
          ],
          name: "initializeDistributionRecord",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "maxDelayTime",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "nonces",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "numCheckpoints",
          outputs: [
            {
              internalType: "uint32",
              name: "",
              type: "uint32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "deadline",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "v",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "r",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "s",
              type: "bytes32",
            },
          ],
          name: "permit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "randomValue",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
          ],
          name: "setMerkleRoot",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address payable",
              name: "_recipient",
              type: "address",
            },
          ],
          name: "setSweepRecipient",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
          ],
          name: "setToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
          ],
          name: "setTotal",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint128",
                  name: "time",
                  type: "uint128",
                },
                {
                  internalType: "uint128",
                  name: "vestedFraction",
                  type: "uint128",
                },
              ],
              internalType: "struct Tranche[]",
              name: "",
              type: "tuple[]",
            },
          ],
          name: "setTranches",
          outputs: [],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
          ],
          name: "setUri",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_voteFactor",
              type: "uint256",
            },
          ],
          name: "setVoteFactor",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "sweepNative",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "sweepNative",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
          ],
          name: "sweepToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "sweepToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "token",
          outputs: [
            {
              internalType: "contract IERC20",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "total",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "uri",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        CLOCK_MODE:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        DOMAIN_SEPARATOR:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        NAME: "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        VERSION:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        adjust:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        allowance:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        approve:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        balanceOf:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        checkpoints:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        claimed:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        clock:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        decimals:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        decreaseAllowance:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        delegate:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        delegateBySig:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        delegates:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        distancePerSecond:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        eip712Domain:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getClaimableAmount:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getDistributionRecord:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getFairDelayTime:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getFractionDenominator:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getPastTotalSupply:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getPastVotes:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getSweepRecipient:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getTotalVotes:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getTranche:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getTranches:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getVestedFraction:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getVoteFactor:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getVotes:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        increaseAllowance:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        maxDelayTime:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        name: "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        nonces:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        numCheckpoints:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        owner:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        permit:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        randomValue:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        renounceOwnership:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        setSweepRecipient:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        setToken:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        setTotal:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        setTranches:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        setUri:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        setVoteFactor:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        sweepNative:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        sweepToken:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        symbol:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        token:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        total:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        totalSupply:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        transfer:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        transferFrom:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        transferOwnership:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        uri: "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getMerkleRoot: "contracts/claim/factory/MerkleSetInitializable.sol",
      },
    },
    PerAddressTrancheVestingMerkleDistributorFactory: {
      address: "0xaE83c1978E86f7001dB81B1E036f87d4F2937EDF",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "implementation",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "distributor",
              type: "address",
            },
          ],
          name: "DistributorDeployed",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint160",
              name: "_maxDelayTime",
              type: "uint160",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_nonce",
              type: "uint256",
            },
          ],
          name: "deployDistributor",
          outputs: [
            {
              internalType:
                "contract PerAddressTrancheVestingMerkleDistributor",
              name: "distributor",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "distributors",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint160",
              name: "_maxDelayTime",
              type: "uint160",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_nonce",
              type: "uint256",
            },
          ],
          name: "predictDistributorAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  10: {
    FlatPriceSaleFactory_v_2_1: {
      address: "0x33f439DB3c004A0E6398FcCcf9f81d2637c226f9",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_implementation",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "implementation",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract FlatPriceSale_v_2_1",
              name: "clone",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "string",
              name: "baseCurrency",
              type: "string",
            },
            {
              indexed: false,
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "nativeOracle",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "nativePaymentsEnabled",
              type: "bool",
            },
          ],
          name: "NewSale",
          type: "event",
        },
        {
          inputs: [],
          name: "VERSION",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "implementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
            {
              internalType: "string",
              name: "_baseCurrency",
              type: "string",
            },
            {
              internalType: "bool",
              name: "_nativePaymentsEnabled",
              type: "bool",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "_nativeTokenPriceOracle",
              type: "address",
            },
            {
              internalType: "contract IERC20Upgradeable[]",
              name: "tokens",
              type: "address[]",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck[]",
              name: "oracles",
              type: "address[]",
            },
            {
              internalType: "uint8[]",
              name: "decimals",
              type: "uint8[]",
            },
          ],
          name: "newSale",
          outputs: [
            {
              internalType: "contract FlatPriceSale_v_2_1",
              name: "sale",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    FlatPriceSale_v_2_1: {
      address: "0x21896f02b7B33A8da6eC42a01D8C450D7A868A35",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_feeBips",
              type: "uint256",
            },
            {
              internalType: "address payable",
              name: "_feeRecipient",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "buyer",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "baseCurrencyValue",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenValue",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenFee",
              type: "uint256",
            },
          ],
          name: "Buy",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address payable",
              name: "feeRecipient",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "feeBips",
              type: "uint256",
            },
          ],
          name: "ImplementationConstructor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "string",
              name: "baseCurrency",
              type: "string",
            },
            {
              indexed: false,
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "nativeOracle",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "nativePaymentsEnabled",
              type: "bool",
            },
          ],
          name: "Initialize",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "distributor",
              type: "address",
            },
          ],
          name: "RegisterDistributor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "contract IOracleOrL2OracleWithSequencerCheck",
                  name: "oracle",
                  type: "address",
                },
                {
                  internalType: "uint8",
                  name: "decimals",
                  type: "uint8",
                },
              ],
              indexed: false,
              internalType: "struct PaymentTokenInfo",
              name: "paymentTokenInfo",
              type: "tuple",
            },
          ],
          name: "SetPaymentTokenInfo",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepNative",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepToken",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
          ],
          name: "Update",
          type: "event",
        },
        {
          inputs: [],
          name: "VERSION",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "baseCurrency",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "buyWithNative",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "quantity",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "buyWithToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "buyerTotal",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "config",
          outputs: [
            {
              internalType: "address payable",
              name: "recipient",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "saleMaximum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "userMaximum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "purchaseMinimum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "maxQueueTime",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "URI",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "merkleRoot",
              type: "bytes32",
            },
          ],
          name: "generatePseudorandomValue",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "buyer",
              type: "address",
            },
          ],
          name: "getFairQueueTime",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
          ],
          name: "getOraclePrice",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
          ],
          name: "getPaymentToken",
          outputs: [
            {
              components: [
                {
                  internalType: "contract IOracleOrL2OracleWithSequencerCheck",
                  name: "oracle",
                  type: "address",
                },
                {
                  internalType: "uint8",
                  name: "decimals",
                  type: "uint8",
                },
              ],
              internalType: "struct PaymentTokenInfo",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
            {
              internalType: "string",
              name: "_baseCurrency",
              type: "string",
            },
            {
              internalType: "bool",
              name: "_nativePaymentsEnabled",
              type: "bool",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "_nativeTokenPriceOracle",
              type: "address",
            },
            {
              internalType: "contract IERC20Upgradeable[]",
              name: "tokens",
              type: "address[]",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck[]",
              name: "oracles",
              type: "address[]",
            },
            {
              internalType: "uint8[]",
              name: "decimals",
              type: "uint8[]",
            },
          ],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "isOpen",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "isOver",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "root",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "isValidMerkleProof",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "metrics",
          outputs: [
            {
              internalType: "uint256",
              name: "purchaseCount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "buyerCount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "purchaseTotal",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nativeTokenPriceOracle",
          outputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "",
              type: "address",
            },
          ],
          name: "paymentTokens",
          outputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
            {
              internalType: "uint8",
              name: "decimals",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "dest",
              type: "address",
            },
          ],
          name: "payments",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_distributor",
              type: "address",
            },
          ],
          name: "registerDistributor",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "sweepNative",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
          ],
          name: "sweepToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenQuantity",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "tokenDecimals",
              type: "uint256",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
          ],
          name: "tokensToBaseCurrency",
          outputs: [
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "total",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
          ],
          name: "update",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address payable",
              name: "payee",
              type: "address",
            },
          ],
          name: "withdrawPayments",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  56: {
    FlatPriceSaleFactory_v_2_1: {
      address: "0x700A81a525E259f13233c8da11b1d4632f3fdF91",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_implementation",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "implementation",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract FlatPriceSale_v_2_1",
              name: "clone",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "string",
              name: "baseCurrency",
              type: "string",
            },
            {
              indexed: false,
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "nativeOracle",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "nativePaymentsEnabled",
              type: "bool",
            },
          ],
          name: "NewSale",
          type: "event",
        },
        {
          inputs: [],
          name: "VERSION",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "implementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
            {
              internalType: "string",
              name: "_baseCurrency",
              type: "string",
            },
            {
              internalType: "bool",
              name: "_nativePaymentsEnabled",
              type: "bool",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "_nativeTokenPriceOracle",
              type: "address",
            },
            {
              internalType: "contract IERC20Upgradeable[]",
              name: "tokens",
              type: "address[]",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck[]",
              name: "oracles",
              type: "address[]",
            },
            {
              internalType: "uint8[]",
              name: "decimals",
              type: "uint8[]",
            },
          ],
          name: "newSale",
          outputs: [
            {
              internalType: "contract FlatPriceSale_v_2_1",
              name: "sale",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    FlatPriceSale_v_2_1: {
      address: "0x33f439DB3c004A0E6398FcCcf9f81d2637c226f9",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_feeBips",
              type: "uint256",
            },
            {
              internalType: "address payable",
              name: "_feeRecipient",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "buyer",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "baseCurrencyValue",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenValue",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenFee",
              type: "uint256",
            },
          ],
          name: "Buy",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address payable",
              name: "feeRecipient",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "feeBips",
              type: "uint256",
            },
          ],
          name: "ImplementationConstructor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "string",
              name: "baseCurrency",
              type: "string",
            },
            {
              indexed: false,
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "nativeOracle",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "nativePaymentsEnabled",
              type: "bool",
            },
          ],
          name: "Initialize",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "distributor",
              type: "address",
            },
          ],
          name: "RegisterDistributor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "contract IOracleOrL2OracleWithSequencerCheck",
                  name: "oracle",
                  type: "address",
                },
                {
                  internalType: "uint8",
                  name: "decimals",
                  type: "uint8",
                },
              ],
              indexed: false,
              internalType: "struct PaymentTokenInfo",
              name: "paymentTokenInfo",
              type: "tuple",
            },
          ],
          name: "SetPaymentTokenInfo",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepNative",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepToken",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
          ],
          name: "Update",
          type: "event",
        },
        {
          inputs: [],
          name: "VERSION",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "baseCurrency",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "buyWithNative",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "quantity",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "buyWithToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "buyerTotal",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "config",
          outputs: [
            {
              internalType: "address payable",
              name: "recipient",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "saleMaximum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "userMaximum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "purchaseMinimum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "maxQueueTime",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "URI",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "merkleRoot",
              type: "bytes32",
            },
          ],
          name: "generatePseudorandomValue",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "buyer",
              type: "address",
            },
          ],
          name: "getFairQueueTime",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
          ],
          name: "getOraclePrice",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
          ],
          name: "getPaymentToken",
          outputs: [
            {
              components: [
                {
                  internalType: "contract IOracleOrL2OracleWithSequencerCheck",
                  name: "oracle",
                  type: "address",
                },
                {
                  internalType: "uint8",
                  name: "decimals",
                  type: "uint8",
                },
              ],
              internalType: "struct PaymentTokenInfo",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
            {
              internalType: "string",
              name: "_baseCurrency",
              type: "string",
            },
            {
              internalType: "bool",
              name: "_nativePaymentsEnabled",
              type: "bool",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "_nativeTokenPriceOracle",
              type: "address",
            },
            {
              internalType: "contract IERC20Upgradeable[]",
              name: "tokens",
              type: "address[]",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck[]",
              name: "oracles",
              type: "address[]",
            },
            {
              internalType: "uint8[]",
              name: "decimals",
              type: "uint8[]",
            },
          ],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "isOpen",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "isOver",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "root",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "isValidMerkleProof",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "metrics",
          outputs: [
            {
              internalType: "uint256",
              name: "purchaseCount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "buyerCount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "purchaseTotal",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nativeTokenPriceOracle",
          outputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "",
              type: "address",
            },
          ],
          name: "paymentTokens",
          outputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
            {
              internalType: "uint8",
              name: "decimals",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "dest",
              type: "address",
            },
          ],
          name: "payments",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_distributor",
              type: "address",
            },
          ],
          name: "registerDistributor",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "sweepNative",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
          ],
          name: "sweepToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenQuantity",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "tokenDecimals",
              type: "uint256",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
          ],
          name: "tokensToBaseCurrency",
          outputs: [
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "total",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
          ],
          name: "update",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address payable",
              name: "payee",
              type: "address",
            },
          ],
          name: "withdrawPayments",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  97: {
    FlatPriceSaleFactory_v_2_1: {
      address: "0x700A81a525E259f13233c8da11b1d4632f3fdF91",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_implementation",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "implementation",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract FlatPriceSale_v_2_1",
              name: "clone",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "string",
              name: "baseCurrency",
              type: "string",
            },
            {
              indexed: false,
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "nativeOracle",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "nativePaymentsEnabled",
              type: "bool",
            },
          ],
          name: "NewSale",
          type: "event",
        },
        {
          inputs: [],
          name: "VERSION",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "implementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
            {
              internalType: "string",
              name: "_baseCurrency",
              type: "string",
            },
            {
              internalType: "bool",
              name: "_nativePaymentsEnabled",
              type: "bool",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "_nativeTokenPriceOracle",
              type: "address",
            },
            {
              internalType: "contract IERC20Upgradeable[]",
              name: "tokens",
              type: "address[]",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck[]",
              name: "oracles",
              type: "address[]",
            },
            {
              internalType: "uint8[]",
              name: "decimals",
              type: "uint8[]",
            },
          ],
          name: "newSale",
          outputs: [
            {
              internalType: "contract FlatPriceSale_v_2_1",
              name: "sale",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    FlatPriceSale_v_2_1: {
      address: "0x33f439DB3c004A0E6398FcCcf9f81d2637c226f9",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_feeBips",
              type: "uint256",
            },
            {
              internalType: "address payable",
              name: "_feeRecipient",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "buyer",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "baseCurrencyValue",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenValue",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenFee",
              type: "uint256",
            },
          ],
          name: "Buy",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address payable",
              name: "feeRecipient",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "feeBips",
              type: "uint256",
            },
          ],
          name: "ImplementationConstructor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "string",
              name: "baseCurrency",
              type: "string",
            },
            {
              indexed: false,
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "nativeOracle",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "nativePaymentsEnabled",
              type: "bool",
            },
          ],
          name: "Initialize",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "distributor",
              type: "address",
            },
          ],
          name: "RegisterDistributor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "contract IOracleOrL2OracleWithSequencerCheck",
                  name: "oracle",
                  type: "address",
                },
                {
                  internalType: "uint8",
                  name: "decimals",
                  type: "uint8",
                },
              ],
              indexed: false,
              internalType: "struct PaymentTokenInfo",
              name: "paymentTokenInfo",
              type: "tuple",
            },
          ],
          name: "SetPaymentTokenInfo",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepNative",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepToken",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
          ],
          name: "Update",
          type: "event",
        },
        {
          inputs: [],
          name: "VERSION",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "baseCurrency",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "buyWithNative",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "quantity",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "buyWithToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "buyerTotal",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "config",
          outputs: [
            {
              internalType: "address payable",
              name: "recipient",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "saleMaximum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "userMaximum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "purchaseMinimum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "maxQueueTime",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "URI",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "merkleRoot",
              type: "bytes32",
            },
          ],
          name: "generatePseudorandomValue",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "buyer",
              type: "address",
            },
          ],
          name: "getFairQueueTime",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
          ],
          name: "getOraclePrice",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
          ],
          name: "getPaymentToken",
          outputs: [
            {
              components: [
                {
                  internalType: "contract IOracleOrL2OracleWithSequencerCheck",
                  name: "oracle",
                  type: "address",
                },
                {
                  internalType: "uint8",
                  name: "decimals",
                  type: "uint8",
                },
              ],
              internalType: "struct PaymentTokenInfo",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
            {
              internalType: "string",
              name: "_baseCurrency",
              type: "string",
            },
            {
              internalType: "bool",
              name: "_nativePaymentsEnabled",
              type: "bool",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "_nativeTokenPriceOracle",
              type: "address",
            },
            {
              internalType: "contract IERC20Upgradeable[]",
              name: "tokens",
              type: "address[]",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck[]",
              name: "oracles",
              type: "address[]",
            },
            {
              internalType: "uint8[]",
              name: "decimals",
              type: "uint8[]",
            },
          ],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "isOpen",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "isOver",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "root",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "isValidMerkleProof",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "metrics",
          outputs: [
            {
              internalType: "uint256",
              name: "purchaseCount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "buyerCount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "purchaseTotal",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nativeTokenPriceOracle",
          outputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "",
              type: "address",
            },
          ],
          name: "paymentTokens",
          outputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
            {
              internalType: "uint8",
              name: "decimals",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "dest",
              type: "address",
            },
          ],
          name: "payments",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_distributor",
              type: "address",
            },
          ],
          name: "registerDistributor",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "sweepNative",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
          ],
          name: "sweepToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenQuantity",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "tokenDecimals",
              type: "uint256",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
          ],
          name: "tokensToBaseCurrency",
          outputs: [
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "total",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
          ],
          name: "update",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address payable",
              name: "payee",
              type: "address",
            },
          ],
          name: "withdrawPayments",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  137: {
    FlatPriceSaleFactory_v_2_1: {
      address: "0x48B8c957A91a5f2f5f751163B96C1BA7d8c1f1a7",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_implementation",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "implementation",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract FlatPriceSale_v_2_1",
              name: "clone",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "string",
              name: "baseCurrency",
              type: "string",
            },
            {
              indexed: false,
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "nativeOracle",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "nativePaymentsEnabled",
              type: "bool",
            },
          ],
          name: "NewSale",
          type: "event",
        },
        {
          inputs: [],
          name: "VERSION",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "implementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
            {
              internalType: "string",
              name: "_baseCurrency",
              type: "string",
            },
            {
              internalType: "bool",
              name: "_nativePaymentsEnabled",
              type: "bool",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "_nativeTokenPriceOracle",
              type: "address",
            },
            {
              internalType: "contract IERC20Upgradeable[]",
              name: "tokens",
              type: "address[]",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck[]",
              name: "oracles",
              type: "address[]",
            },
            {
              internalType: "uint8[]",
              name: "decimals",
              type: "uint8[]",
            },
          ],
          name: "newSale",
          outputs: [
            {
              internalType: "contract FlatPriceSale_v_2_1",
              name: "sale",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    FlatPriceSale_v_2_1: {
      address: "0xe12AA2502d536E6153a35341F897335E9B2e123F",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_feeBips",
              type: "uint256",
            },
            {
              internalType: "address payable",
              name: "_feeRecipient",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "buyer",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "baseCurrencyValue",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenValue",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenFee",
              type: "uint256",
            },
          ],
          name: "Buy",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address payable",
              name: "feeRecipient",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "feeBips",
              type: "uint256",
            },
          ],
          name: "ImplementationConstructor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "string",
              name: "baseCurrency",
              type: "string",
            },
            {
              indexed: false,
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "nativeOracle",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "nativePaymentsEnabled",
              type: "bool",
            },
          ],
          name: "Initialize",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "distributor",
              type: "address",
            },
          ],
          name: "RegisterDistributor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "contract IOracleOrL2OracleWithSequencerCheck",
                  name: "oracle",
                  type: "address",
                },
                {
                  internalType: "uint8",
                  name: "decimals",
                  type: "uint8",
                },
              ],
              indexed: false,
              internalType: "struct PaymentTokenInfo",
              name: "paymentTokenInfo",
              type: "tuple",
            },
          ],
          name: "SetPaymentTokenInfo",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepNative",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepToken",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
          ],
          name: "Update",
          type: "event",
        },
        {
          inputs: [],
          name: "VERSION",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "baseCurrency",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "buyWithNative",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "quantity",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "buyWithToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "buyerTotal",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "config",
          outputs: [
            {
              internalType: "address payable",
              name: "recipient",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "saleMaximum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "userMaximum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "purchaseMinimum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "maxQueueTime",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "URI",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "merkleRoot",
              type: "bytes32",
            },
          ],
          name: "generatePseudorandomValue",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "buyer",
              type: "address",
            },
          ],
          name: "getFairQueueTime",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
          ],
          name: "getOraclePrice",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
          ],
          name: "getPaymentToken",
          outputs: [
            {
              components: [
                {
                  internalType: "contract IOracleOrL2OracleWithSequencerCheck",
                  name: "oracle",
                  type: "address",
                },
                {
                  internalType: "uint8",
                  name: "decimals",
                  type: "uint8",
                },
              ],
              internalType: "struct PaymentTokenInfo",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
            {
              internalType: "string",
              name: "_baseCurrency",
              type: "string",
            },
            {
              internalType: "bool",
              name: "_nativePaymentsEnabled",
              type: "bool",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "_nativeTokenPriceOracle",
              type: "address",
            },
            {
              internalType: "contract IERC20Upgradeable[]",
              name: "tokens",
              type: "address[]",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck[]",
              name: "oracles",
              type: "address[]",
            },
            {
              internalType: "uint8[]",
              name: "decimals",
              type: "uint8[]",
            },
          ],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "isOpen",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "isOver",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "root",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "isValidMerkleProof",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "metrics",
          outputs: [
            {
              internalType: "uint256",
              name: "purchaseCount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "buyerCount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "purchaseTotal",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nativeTokenPriceOracle",
          outputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "",
              type: "address",
            },
          ],
          name: "paymentTokens",
          outputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
            {
              internalType: "uint8",
              name: "decimals",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "dest",
              type: "address",
            },
          ],
          name: "payments",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_distributor",
              type: "address",
            },
          ],
          name: "registerDistributor",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "sweepNative",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
          ],
          name: "sweepToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenQuantity",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "tokenDecimals",
              type: "uint256",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
          ],
          name: "tokensToBaseCurrency",
          outputs: [
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "total",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
          ],
          name: "update",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address payable",
              name: "payee",
              type: "address",
            },
          ],
          name: "withdrawPayments",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  420: {},
  31337: {
    ContinuousVestingMerkleDistributor: {
      address: "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidShortString",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "str",
              type: "string",
            },
          ],
          name: "StringTooLong",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              indexed: false,
              internalType: "int256",
              name: "amount",
              type: "int256",
            },
          ],
          name: "Adjust",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "Claim",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "delegator",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "fromDelegate",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "toDelegate",
              type: "address",
            },
          ],
          name: "DelegateChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "delegate",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "previousBalance",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "newBalance",
              type: "uint256",
            },
          ],
          name: "DelegateVotesChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [],
          name: "EIP712DomainChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "total",
              type: "uint256",
            },
          ],
          name: "InitializeDistributionRecord",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "total",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "uri",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "fractionDenominator",
              type: "uint256",
            },
          ],
          name: "InitializeDistributor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "start",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "cliff",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "end",
              type: "uint256",
            },
          ],
          name: "SetContinuousVesting",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint160",
              name: "maxDelayTime",
              type: "uint160",
            },
          ],
          name: "SetDelay",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bytes32",
              name: "merkleRoot",
              type: "bytes32",
            },
          ],
          name: "SetMerkleRoot",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "recipient",
              type: "address",
            },
          ],
          name: "SetSweepRecipient",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
          ],
          name: "SetToken",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "total",
              type: "uint256",
            },
          ],
          name: "SetTotal",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "string",
              name: "uri",
              type: "string",
            },
          ],
          name: "SetUri",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "voteFactor",
              type: "uint256",
            },
          ],
          name: "SetVoteFactor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepNative",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepToken",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [],
          name: "CLOCK_MODE",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "DOMAIN_SEPARATOR",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "NAME",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "VERSION",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "int256",
              name: "amount",
              type: "int256",
            },
          ],
          name: "adjust",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint32",
              name: "pos",
              type: "uint32",
            },
          ],
          name: "checkpoints",
          outputs: [
            {
              components: [
                {
                  internalType: "uint32",
                  name: "fromBlock",
                  type: "uint32",
                },
                {
                  internalType: "uint224",
                  name: "votes",
                  type: "uint224",
                },
              ],
              internalType: "struct ERC20Votes.Checkpoint",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "index",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "totalAmount",
              type: "uint256",
            },
            {
              internalType: "bytes32[]",
              name: "merkleProof",
              type: "bytes32[]",
            },
          ],
          name: "claim",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "claimed",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "clock",
          outputs: [
            {
              internalType: "uint48",
              name: "",
              type: "uint48",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "subtractedValue",
              type: "uint256",
            },
          ],
          name: "decreaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "delegatee",
              type: "address",
            },
          ],
          name: "delegate",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "delegatee",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "nonce",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "expiry",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "v",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "r",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "s",
              type: "bytes32",
            },
          ],
          name: "delegateBySig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "delegates",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "distancePerSecond",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "eip712Domain",
          outputs: [
            {
              internalType: "bytes1",
              name: "fields",
              type: "bytes1",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "version",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "chainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "verifyingContract",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "salt",
              type: "bytes32",
            },
            {
              internalType: "uint256[]",
              name: "extensions",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "getClaimableAmount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
          ],
          name: "getDistributionRecord",
          outputs: [
            {
              components: [
                {
                  internalType: "bool",
                  name: "initialized",
                  type: "bool",
                },
                {
                  internalType: "uint120",
                  name: "total",
                  type: "uint120",
                },
                {
                  internalType: "uint120",
                  name: "claimed",
                  type: "uint120",
                },
              ],
              internalType: "struct DistributionRecord",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "getFairDelayTime",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getFractionDenominator",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getMerkleRoot",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "timepoint",
              type: "uint256",
            },
          ],
          name: "getPastTotalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "timepoint",
              type: "uint256",
            },
          ],
          name: "getPastVotes",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getSweepRecipient",
          outputs: [
            {
              internalType: "address payable",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalVotes",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "time",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "getVestedFraction",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getVestingConfig",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "getVoteFactor",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "getVotes",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "addedValue",
              type: "uint256",
            },
          ],
          name: "increaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_start",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_cliff",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_end",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint160",
              name: "_maxDelayTime",
              type: "uint160",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "index",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "bytes32[]",
              name: "merkleProof",
              type: "bytes32[]",
            },
          ],
          name: "initializeDistributionRecord",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "maxDelayTime",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "nonces",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "numCheckpoints",
          outputs: [
            {
              internalType: "uint32",
              name: "",
              type: "uint32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "deadline",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "v",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "r",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "s",
              type: "bytes32",
            },
          ],
          name: "permit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "randomValue",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
          ],
          name: "setMerkleRoot",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address payable",
              name: "_recipient",
              type: "address",
            },
          ],
          name: "setSweepRecipient",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
          ],
          name: "setToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
          ],
          name: "setTotal",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
          ],
          name: "setUri",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_start",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_cliff",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_end",
              type: "uint256",
            },
          ],
          name: "setVestingConfig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_voteFactor",
              type: "uint256",
            },
          ],
          name: "setVoteFactor",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "sweepNative",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "sweepNative",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
          ],
          name: "sweepToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "sweepToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "token",
          outputs: [
            {
              internalType: "contract IERC20",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "total",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "uri",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        CLOCK_MODE:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        DOMAIN_SEPARATOR:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        NAME: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        VERSION: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        adjust: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        allowance: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        approve: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        balanceOf: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        checkpoints:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        claimed: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        clock: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        decimals: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        decreaseAllowance:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        delegate: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        delegateBySig:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        delegates: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        distancePerSecond:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        eip712Domain:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        getClaimableAmount:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        getDistributionRecord:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        getFairDelayTime:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        getFractionDenominator:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        getPastTotalSupply:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        getPastVotes:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        getSweepRecipient:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        getTotalVotes:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        getVestedFraction:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        getVestingConfig:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        getVoteFactor:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        getVotes: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        increaseAllowance:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        maxDelayTime:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        name: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        nonces: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        numCheckpoints:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        owner: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        permit: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        randomValue:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        renounceOwnership:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        setSweepRecipient:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        setToken: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        setTotal: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        setUri: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        setVestingConfig:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        setVoteFactor:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        sweepNative:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        sweepToken:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        symbol: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        token: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        total: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        totalSupply:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        transfer: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        transferFrom:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        transferOwnership:
          "contracts/claim/factory/ContinuousVestingInitializable.sol",
        uri: "contracts/claim/factory/ContinuousVestingInitializable.sol",
        getMerkleRoot: "contracts/claim/factory/MerkleSetInitializable.sol",
      },
    },
    ContinuousVestingMerkleDistributorFactory: {
      address: "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "implementation",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "distributor",
              type: "address",
            },
          ],
          name: "DistributorDeployed",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_start",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_cliff",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_end",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint160",
              name: "_maxDelayTime",
              type: "uint160",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_nonce",
              type: "uint256",
            },
          ],
          name: "deployDistributor",
          outputs: [
            {
              internalType: "contract ContinuousVestingMerkleDistributor",
              name: "distributor",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "distributors",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_start",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_cliff",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_end",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint160",
              name: "_maxDelayTime",
              type: "uint160",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_nonce",
              type: "uint256",
            },
          ],
          name: "predictDistributorAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    PerAddressContinuousVestingMerkleDistributor: {
      address: "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidShortString",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "str",
              type: "string",
            },
          ],
          name: "StringTooLong",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              indexed: false,
              internalType: "int256",
              name: "amount",
              type: "int256",
            },
          ],
          name: "Adjust",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "Claim",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "delegator",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "fromDelegate",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "toDelegate",
              type: "address",
            },
          ],
          name: "DelegateChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "delegate",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "previousBalance",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "newBalance",
              type: "uint256",
            },
          ],
          name: "DelegateVotesChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [],
          name: "EIP712DomainChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "total",
              type: "uint256",
            },
          ],
          name: "InitializeDistributionRecord",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "total",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "uri",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "fractionDenominator",
              type: "uint256",
            },
          ],
          name: "InitializeDistributor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint160",
              name: "maxDelayTime",
              type: "uint160",
            },
          ],
          name: "SetDelay",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bytes32",
              name: "merkleRoot",
              type: "bytes32",
            },
          ],
          name: "SetMerkleRoot",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "recipient",
              type: "address",
            },
          ],
          name: "SetSweepRecipient",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
          ],
          name: "SetToken",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "total",
              type: "uint256",
            },
          ],
          name: "SetTotal",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "string",
              name: "uri",
              type: "string",
            },
          ],
          name: "SetUri",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "voteFactor",
              type: "uint256",
            },
          ],
          name: "SetVoteFactor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepNative",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepToken",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [],
          name: "CLOCK_MODE",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "DOMAIN_SEPARATOR",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "NAME",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "VERSION",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "int256",
              name: "amount",
              type: "int256",
            },
          ],
          name: "adjust",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint32",
              name: "pos",
              type: "uint32",
            },
          ],
          name: "checkpoints",
          outputs: [
            {
              components: [
                {
                  internalType: "uint32",
                  name: "fromBlock",
                  type: "uint32",
                },
                {
                  internalType: "uint224",
                  name: "votes",
                  type: "uint224",
                },
              ],
              internalType: "struct ERC20Votes.Checkpoint",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "index",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "totalAmount",
              type: "uint256",
            },
            {
              internalType: "bytes32[]",
              name: "merkleProof",
              type: "bytes32[]",
            },
          ],
          name: "claim",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "claimed",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "clock",
          outputs: [
            {
              internalType: "uint48",
              name: "",
              type: "uint48",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "subtractedValue",
              type: "uint256",
            },
          ],
          name: "decreaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "delegatee",
              type: "address",
            },
          ],
          name: "delegate",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "delegatee",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "nonce",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "expiry",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "v",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "r",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "s",
              type: "bytes32",
            },
          ],
          name: "delegateBySig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "delegates",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "distancePerSecond",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "eip712Domain",
          outputs: [
            {
              internalType: "bytes1",
              name: "fields",
              type: "bytes1",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "version",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "chainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "verifyingContract",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "salt",
              type: "bytes32",
            },
            {
              internalType: "uint256[]",
              name: "extensions",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "getClaimableAmount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
          ],
          name: "getDistributionRecord",
          outputs: [
            {
              components: [
                {
                  internalType: "bool",
                  name: "initialized",
                  type: "bool",
                },
                {
                  internalType: "uint120",
                  name: "total",
                  type: "uint120",
                },
                {
                  internalType: "uint120",
                  name: "claimed",
                  type: "uint120",
                },
              ],
              internalType: "struct DistributionRecord",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "getFairDelayTime",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getFractionDenominator",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getMerkleRoot",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "timepoint",
              type: "uint256",
            },
          ],
          name: "getPastTotalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "timepoint",
              type: "uint256",
            },
          ],
          name: "getPastVotes",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getSweepRecipient",
          outputs: [
            {
              internalType: "address payable",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalVotes",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "time",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "getVestedFraction",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "getVoteFactor",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "getVotes",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "addedValue",
              type: "uint256",
            },
          ],
          name: "increaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint160",
              name: "_maxDelayTime",
              type: "uint160",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "index",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "bytes32[]",
              name: "merkleProof",
              type: "bytes32[]",
            },
          ],
          name: "initializeDistributionRecord",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "maxDelayTime",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "nonces",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "numCheckpoints",
          outputs: [
            {
              internalType: "uint32",
              name: "",
              type: "uint32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "deadline",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "v",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "r",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "s",
              type: "bytes32",
            },
          ],
          name: "permit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "randomValue",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
          ],
          name: "setMerkleRoot",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address payable",
              name: "_recipient",
              type: "address",
            },
          ],
          name: "setSweepRecipient",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
          ],
          name: "setToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
          ],
          name: "setTotal",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
          ],
          name: "setUri",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_voteFactor",
              type: "uint256",
            },
          ],
          name: "setVoteFactor",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "sweepNative",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "sweepNative",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
          ],
          name: "sweepToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "sweepToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "token",
          outputs: [
            {
              internalType: "contract IERC20",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "total",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "uri",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        CLOCK_MODE:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        DOMAIN_SEPARATOR:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        NAME: "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        VERSION:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        adjust:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        allowance:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        approve:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        balanceOf:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        checkpoints:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        claimed:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        clock:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        decimals:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        decreaseAllowance:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        delegate:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        delegateBySig:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        delegates:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        distancePerSecond:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        eip712Domain:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        getClaimableAmount:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        getDistributionRecord:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        getFairDelayTime:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        getFractionDenominator:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        getPastTotalSupply:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        getPastVotes:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        getSweepRecipient:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        getTotalVotes:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        getVestedFraction:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        getVoteFactor:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        getVotes:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        increaseAllowance:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        maxDelayTime:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        name: "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        nonces:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        numCheckpoints:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        owner:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        permit:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        randomValue:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        renounceOwnership:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        setSweepRecipient:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        setToken:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        setTotal:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        setUri:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        setVoteFactor:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        sweepNative:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        sweepToken:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        symbol:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        token:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        total:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        totalSupply:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        transfer:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        transferFrom:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        transferOwnership:
          "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        uri: "contracts/claim/factory/PerAddressContinuousVestingInitializable.sol",
        getMerkleRoot: "contracts/claim/factory/MerkleSetInitializable.sol",
      },
    },
    PerAddressContinuousVestingMerkleDistributorFactory: {
      address: "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "implementation",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "distributor",
              type: "address",
            },
          ],
          name: "DistributorDeployed",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint160",
              name: "_maxDelayTime",
              type: "uint160",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_nonce",
              type: "uint256",
            },
          ],
          name: "deployDistributor",
          outputs: [
            {
              internalType:
                "contract PerAddressContinuousVestingMerkleDistributor",
              name: "distributor",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "distributors",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint160",
              name: "_maxDelayTime",
              type: "uint160",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_nonce",
              type: "uint256",
            },
          ],
          name: "predictDistributorAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    PerAddressTrancheVestingMerkleDistributor: {
      address: "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidShortString",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "str",
              type: "string",
            },
          ],
          name: "StringTooLong",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              indexed: false,
              internalType: "int256",
              name: "amount",
              type: "int256",
            },
          ],
          name: "Adjust",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "Claim",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "delegator",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "fromDelegate",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "toDelegate",
              type: "address",
            },
          ],
          name: "DelegateChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "delegate",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "previousBalance",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "newBalance",
              type: "uint256",
            },
          ],
          name: "DelegateVotesChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [],
          name: "EIP712DomainChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "total",
              type: "uint256",
            },
          ],
          name: "InitializeDistributionRecord",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "total",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "uri",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "fractionDenominator",
              type: "uint256",
            },
          ],
          name: "InitializeDistributor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint160",
              name: "maxDelayTime",
              type: "uint160",
            },
          ],
          name: "SetDelay",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bytes32",
              name: "merkleRoot",
              type: "bytes32",
            },
          ],
          name: "SetMerkleRoot",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "recipient",
              type: "address",
            },
          ],
          name: "SetSweepRecipient",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
          ],
          name: "SetToken",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "total",
              type: "uint256",
            },
          ],
          name: "SetTotal",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "index",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint128",
              name: "time",
              type: "uint128",
            },
            {
              indexed: false,
              internalType: "uint128",
              name: "VestedFraction",
              type: "uint128",
            },
          ],
          name: "SetTranche",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "string",
              name: "uri",
              type: "string",
            },
          ],
          name: "SetUri",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "voteFactor",
              type: "uint256",
            },
          ],
          name: "SetVoteFactor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepNative",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepToken",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [],
          name: "CLOCK_MODE",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "DOMAIN_SEPARATOR",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "NAME",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "VERSION",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "int256",
              name: "amount",
              type: "int256",
            },
          ],
          name: "adjust",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint32",
              name: "pos",
              type: "uint32",
            },
          ],
          name: "checkpoints",
          outputs: [
            {
              components: [
                {
                  internalType: "uint32",
                  name: "fromBlock",
                  type: "uint32",
                },
                {
                  internalType: "uint224",
                  name: "votes",
                  type: "uint224",
                },
              ],
              internalType: "struct ERC20Votes.Checkpoint",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "index",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "totalAmount",
              type: "uint256",
            },
            {
              internalType: "bytes32[]",
              name: "merkleProof",
              type: "bytes32[]",
            },
          ],
          name: "claim",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "claimed",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "clock",
          outputs: [
            {
              internalType: "uint48",
              name: "",
              type: "uint48",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "subtractedValue",
              type: "uint256",
            },
          ],
          name: "decreaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "delegatee",
              type: "address",
            },
          ],
          name: "delegate",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "delegatee",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "nonce",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "expiry",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "v",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "r",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "s",
              type: "bytes32",
            },
          ],
          name: "delegateBySig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "delegates",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "distancePerSecond",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "eip712Domain",
          outputs: [
            {
              internalType: "bytes1",
              name: "fields",
              type: "bytes1",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "version",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "chainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "verifyingContract",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "salt",
              type: "bytes32",
            },
            {
              internalType: "uint256[]",
              name: "extensions",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "getClaimableAmount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
          ],
          name: "getDistributionRecord",
          outputs: [
            {
              components: [
                {
                  internalType: "bool",
                  name: "initialized",
                  type: "bool",
                },
                {
                  internalType: "uint120",
                  name: "total",
                  type: "uint120",
                },
                {
                  internalType: "uint120",
                  name: "claimed",
                  type: "uint120",
                },
              ],
              internalType: "struct DistributionRecord",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "getFairDelayTime",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getFractionDenominator",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getMerkleRoot",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "timepoint",
              type: "uint256",
            },
          ],
          name: "getPastTotalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "timepoint",
              type: "uint256",
            },
          ],
          name: "getPastVotes",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getSweepRecipient",
          outputs: [
            {
              internalType: "address payable",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalVotes",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "getTranche",
          outputs: [
            {
              components: [
                {
                  internalType: "uint128",
                  name: "time",
                  type: "uint128",
                },
                {
                  internalType: "uint128",
                  name: "vestedFraction",
                  type: "uint128",
                },
              ],
              internalType: "struct Tranche",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "getTranches",
          outputs: [
            {
              components: [
                {
                  internalType: "uint128",
                  name: "time",
                  type: "uint128",
                },
                {
                  internalType: "uint128",
                  name: "vestedFraction",
                  type: "uint128",
                },
              ],
              internalType: "struct Tranche[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "time",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "getVestedFraction",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "getVoteFactor",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "getVotes",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "addedValue",
              type: "uint256",
            },
          ],
          name: "increaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint160",
              name: "_maxDelayTime",
              type: "uint160",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "index",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "bytes32[]",
              name: "merkleProof",
              type: "bytes32[]",
            },
          ],
          name: "initializeDistributionRecord",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "maxDelayTime",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "nonces",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "numCheckpoints",
          outputs: [
            {
              internalType: "uint32",
              name: "",
              type: "uint32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "deadline",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "v",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "r",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "s",
              type: "bytes32",
            },
          ],
          name: "permit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "randomValue",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
          ],
          name: "setMerkleRoot",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address payable",
              name: "_recipient",
              type: "address",
            },
          ],
          name: "setSweepRecipient",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
          ],
          name: "setToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
          ],
          name: "setTotal",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint128",
                  name: "time",
                  type: "uint128",
                },
                {
                  internalType: "uint128",
                  name: "vestedFraction",
                  type: "uint128",
                },
              ],
              internalType: "struct Tranche[]",
              name: "",
              type: "tuple[]",
            },
          ],
          name: "setTranches",
          outputs: [],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
          ],
          name: "setUri",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_voteFactor",
              type: "uint256",
            },
          ],
          name: "setVoteFactor",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "sweepNative",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "sweepNative",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
          ],
          name: "sweepToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "sweepToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "token",
          outputs: [
            {
              internalType: "contract IERC20",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "total",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "uri",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        CLOCK_MODE:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        DOMAIN_SEPARATOR:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        NAME: "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        VERSION:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        adjust:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        allowance:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        approve:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        balanceOf:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        checkpoints:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        claimed:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        clock:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        decimals:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        decreaseAllowance:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        delegate:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        delegateBySig:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        delegates:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        distancePerSecond:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        eip712Domain:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getClaimableAmount:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getDistributionRecord:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getFairDelayTime:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getFractionDenominator:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getPastTotalSupply:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getPastVotes:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getSweepRecipient:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getTotalVotes:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getTranche:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getTranches:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getVestedFraction:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getVoteFactor:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getVotes:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        increaseAllowance:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        maxDelayTime:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        name: "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        nonces:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        numCheckpoints:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        owner:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        permit:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        randomValue:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        renounceOwnership:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        setSweepRecipient:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        setToken:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        setTotal:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        setTranches:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        setUri:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        setVoteFactor:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        sweepNative:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        sweepToken:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        symbol:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        token:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        total:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        totalSupply:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        transfer:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        transferFrom:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        transferOwnership:
          "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        uri: "contracts/claim/factory/PerAddressTrancheVestingInitializable.sol",
        getMerkleRoot: "contracts/claim/factory/MerkleSetInitializable.sol",
      },
    },
    PerAddressTrancheVestingMerkleDistributorFactory: {
      address: "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "implementation",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "distributor",
              type: "address",
            },
          ],
          name: "DistributorDeployed",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint160",
              name: "_maxDelayTime",
              type: "uint160",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_nonce",
              type: "uint256",
            },
          ],
          name: "deployDistributor",
          outputs: [
            {
              internalType:
                "contract PerAddressTrancheVestingMerkleDistributor",
              name: "distributor",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "distributors",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint160",
              name: "_maxDelayTime",
              type: "uint160",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_nonce",
              type: "uint256",
            },
          ],
          name: "predictDistributorAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  42161: {
    FlatPriceSaleFactory_v_2_1: {
      address: "0x21896f02b7B33A8da6eC42a01D8C450D7A868A35",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_implementation",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "implementation",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract FlatPriceSale_v_2_1",
              name: "clone",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "string",
              name: "baseCurrency",
              type: "string",
            },
            {
              indexed: false,
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "nativeOracle",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "nativePaymentsEnabled",
              type: "bool",
            },
          ],
          name: "NewSale",
          type: "event",
        },
        {
          inputs: [],
          name: "VERSION",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "implementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
            {
              internalType: "string",
              name: "_baseCurrency",
              type: "string",
            },
            {
              internalType: "bool",
              name: "_nativePaymentsEnabled",
              type: "bool",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "_nativeTokenPriceOracle",
              type: "address",
            },
            {
              internalType: "contract IERC20Upgradeable[]",
              name: "tokens",
              type: "address[]",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck[]",
              name: "oracles",
              type: "address[]",
            },
            {
              internalType: "uint8[]",
              name: "decimals",
              type: "uint8[]",
            },
          ],
          name: "newSale",
          outputs: [
            {
              internalType: "contract FlatPriceSale_v_2_1",
              name: "sale",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    FlatPriceSale_v_2_1: {
      address: "0x0CaB80bCf2931DebDB1bd9137A3aF86C957b6e96",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_feeBips",
              type: "uint256",
            },
            {
              internalType: "address payable",
              name: "_feeRecipient",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "buyer",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "baseCurrencyValue",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenValue",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenFee",
              type: "uint256",
            },
          ],
          name: "Buy",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address payable",
              name: "feeRecipient",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "feeBips",
              type: "uint256",
            },
          ],
          name: "ImplementationConstructor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "string",
              name: "baseCurrency",
              type: "string",
            },
            {
              indexed: false,
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "nativeOracle",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "nativePaymentsEnabled",
              type: "bool",
            },
          ],
          name: "Initialize",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "distributor",
              type: "address",
            },
          ],
          name: "RegisterDistributor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "contract IOracleOrL2OracleWithSequencerCheck",
                  name: "oracle",
                  type: "address",
                },
                {
                  internalType: "uint8",
                  name: "decimals",
                  type: "uint8",
                },
              ],
              indexed: false,
              internalType: "struct PaymentTokenInfo",
              name: "paymentTokenInfo",
              type: "tuple",
            },
          ],
          name: "SetPaymentTokenInfo",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepNative",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepToken",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
          ],
          name: "Update",
          type: "event",
        },
        {
          inputs: [],
          name: "VERSION",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "baseCurrency",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "buyWithNative",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "quantity",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "buyWithToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "buyerTotal",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "config",
          outputs: [
            {
              internalType: "address payable",
              name: "recipient",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "saleMaximum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "userMaximum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "purchaseMinimum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "maxQueueTime",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "URI",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "merkleRoot",
              type: "bytes32",
            },
          ],
          name: "generatePseudorandomValue",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "buyer",
              type: "address",
            },
          ],
          name: "getFairQueueTime",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
          ],
          name: "getOraclePrice",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
          ],
          name: "getPaymentToken",
          outputs: [
            {
              components: [
                {
                  internalType: "contract IOracleOrL2OracleWithSequencerCheck",
                  name: "oracle",
                  type: "address",
                },
                {
                  internalType: "uint8",
                  name: "decimals",
                  type: "uint8",
                },
              ],
              internalType: "struct PaymentTokenInfo",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
            {
              internalType: "string",
              name: "_baseCurrency",
              type: "string",
            },
            {
              internalType: "bool",
              name: "_nativePaymentsEnabled",
              type: "bool",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "_nativeTokenPriceOracle",
              type: "address",
            },
            {
              internalType: "contract IERC20Upgradeable[]",
              name: "tokens",
              type: "address[]",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck[]",
              name: "oracles",
              type: "address[]",
            },
            {
              internalType: "uint8[]",
              name: "decimals",
              type: "uint8[]",
            },
          ],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "isOpen",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "isOver",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "root",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "isValidMerkleProof",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "metrics",
          outputs: [
            {
              internalType: "uint256",
              name: "purchaseCount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "buyerCount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "purchaseTotal",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nativeTokenPriceOracle",
          outputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "",
              type: "address",
            },
          ],
          name: "paymentTokens",
          outputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
            {
              internalType: "uint8",
              name: "decimals",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "dest",
              type: "address",
            },
          ],
          name: "payments",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_distributor",
              type: "address",
            },
          ],
          name: "registerDistributor",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "sweepNative",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
          ],
          name: "sweepToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenQuantity",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "tokenDecimals",
              type: "uint256",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
          ],
          name: "tokensToBaseCurrency",
          outputs: [
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "total",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
          ],
          name: "update",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address payable",
              name: "payee",
              type: "address",
            },
          ],
          name: "withdrawPayments",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  43113: {
    FlatPriceSaleFactory_v_2_1: {
      address: "0x0CaB80bCf2931DebDB1bd9137A3aF86C957b6e96",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_implementation",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "implementation",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract FlatPriceSale_v_2_1",
              name: "clone",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "string",
              name: "baseCurrency",
              type: "string",
            },
            {
              indexed: false,
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "nativeOracle",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "nativePaymentsEnabled",
              type: "bool",
            },
          ],
          name: "NewSale",
          type: "event",
        },
        {
          inputs: [],
          name: "VERSION",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "implementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
            {
              internalType: "string",
              name: "_baseCurrency",
              type: "string",
            },
            {
              internalType: "bool",
              name: "_nativePaymentsEnabled",
              type: "bool",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "_nativeTokenPriceOracle",
              type: "address",
            },
            {
              internalType: "contract IERC20Upgradeable[]",
              name: "tokens",
              type: "address[]",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck[]",
              name: "oracles",
              type: "address[]",
            },
            {
              internalType: "uint8[]",
              name: "decimals",
              type: "uint8[]",
            },
          ],
          name: "newSale",
          outputs: [
            {
              internalType: "contract FlatPriceSale_v_2_1",
              name: "sale",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    FlatPriceSale_v_2_1: {
      address: "0x797C0d5bC32bc29438c0555EA61EB0318bE40797",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_feeBips",
              type: "uint256",
            },
            {
              internalType: "address payable",
              name: "_feeRecipient",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "buyer",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "baseCurrencyValue",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenValue",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenFee",
              type: "uint256",
            },
          ],
          name: "Buy",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address payable",
              name: "feeRecipient",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "feeBips",
              type: "uint256",
            },
          ],
          name: "ImplementationConstructor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "string",
              name: "baseCurrency",
              type: "string",
            },
            {
              indexed: false,
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "nativeOracle",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "nativePaymentsEnabled",
              type: "bool",
            },
          ],
          name: "Initialize",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "distributor",
              type: "address",
            },
          ],
          name: "RegisterDistributor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "contract IOracleOrL2OracleWithSequencerCheck",
                  name: "oracle",
                  type: "address",
                },
                {
                  internalType: "uint8",
                  name: "decimals",
                  type: "uint8",
                },
              ],
              indexed: false,
              internalType: "struct PaymentTokenInfo",
              name: "paymentTokenInfo",
              type: "tuple",
            },
          ],
          name: "SetPaymentTokenInfo",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepNative",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepToken",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
          ],
          name: "Update",
          type: "event",
        },
        {
          inputs: [],
          name: "VERSION",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "baseCurrency",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "buyWithNative",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "quantity",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "buyWithToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "buyerTotal",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "config",
          outputs: [
            {
              internalType: "address payable",
              name: "recipient",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "saleMaximum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "userMaximum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "purchaseMinimum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "maxQueueTime",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "URI",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "merkleRoot",
              type: "bytes32",
            },
          ],
          name: "generatePseudorandomValue",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "buyer",
              type: "address",
            },
          ],
          name: "getFairQueueTime",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
          ],
          name: "getOraclePrice",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
          ],
          name: "getPaymentToken",
          outputs: [
            {
              components: [
                {
                  internalType: "contract IOracleOrL2OracleWithSequencerCheck",
                  name: "oracle",
                  type: "address",
                },
                {
                  internalType: "uint8",
                  name: "decimals",
                  type: "uint8",
                },
              ],
              internalType: "struct PaymentTokenInfo",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
            {
              internalType: "string",
              name: "_baseCurrency",
              type: "string",
            },
            {
              internalType: "bool",
              name: "_nativePaymentsEnabled",
              type: "bool",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "_nativeTokenPriceOracle",
              type: "address",
            },
            {
              internalType: "contract IERC20Upgradeable[]",
              name: "tokens",
              type: "address[]",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck[]",
              name: "oracles",
              type: "address[]",
            },
            {
              internalType: "uint8[]",
              name: "decimals",
              type: "uint8[]",
            },
          ],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "isOpen",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "isOver",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "root",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "isValidMerkleProof",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "metrics",
          outputs: [
            {
              internalType: "uint256",
              name: "purchaseCount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "buyerCount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "purchaseTotal",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nativeTokenPriceOracle",
          outputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "",
              type: "address",
            },
          ],
          name: "paymentTokens",
          outputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
            {
              internalType: "uint8",
              name: "decimals",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "dest",
              type: "address",
            },
          ],
          name: "payments",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_distributor",
              type: "address",
            },
          ],
          name: "registerDistributor",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "sweepNative",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
          ],
          name: "sweepToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenQuantity",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "tokenDecimals",
              type: "uint256",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
          ],
          name: "tokensToBaseCurrency",
          outputs: [
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "total",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
          ],
          name: "update",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address payable",
              name: "payee",
              type: "address",
            },
          ],
          name: "withdrawPayments",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  43114: {
    FlatPriceSaleFactory_v_2_1: {
      address: "0x0CaB80bCf2931DebDB1bd9137A3aF86C957b6e96",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_implementation",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "implementation",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract FlatPriceSale_v_2_1",
              name: "clone",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "string",
              name: "baseCurrency",
              type: "string",
            },
            {
              indexed: false,
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "nativeOracle",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "nativePaymentsEnabled",
              type: "bool",
            },
          ],
          name: "NewSale",
          type: "event",
        },
        {
          inputs: [],
          name: "VERSION",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "implementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
            {
              internalType: "string",
              name: "_baseCurrency",
              type: "string",
            },
            {
              internalType: "bool",
              name: "_nativePaymentsEnabled",
              type: "bool",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "_nativeTokenPriceOracle",
              type: "address",
            },
            {
              internalType: "contract IERC20Upgradeable[]",
              name: "tokens",
              type: "address[]",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck[]",
              name: "oracles",
              type: "address[]",
            },
            {
              internalType: "uint8[]",
              name: "decimals",
              type: "uint8[]",
            },
          ],
          name: "newSale",
          outputs: [
            {
              internalType: "contract FlatPriceSale_v_2_1",
              name: "sale",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    FlatPriceSale_v_2_1: {
      address: "0x797C0d5bC32bc29438c0555EA61EB0318bE40797",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_feeBips",
              type: "uint256",
            },
            {
              internalType: "address payable",
              name: "_feeRecipient",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "buyer",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "baseCurrencyValue",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenValue",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenFee",
              type: "uint256",
            },
          ],
          name: "Buy",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address payable",
              name: "feeRecipient",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "feeBips",
              type: "uint256",
            },
          ],
          name: "ImplementationConstructor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "string",
              name: "baseCurrency",
              type: "string",
            },
            {
              indexed: false,
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "nativeOracle",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "nativePaymentsEnabled",
              type: "bool",
            },
          ],
          name: "Initialize",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "distributor",
              type: "address",
            },
          ],
          name: "RegisterDistributor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "contract IOracleOrL2OracleWithSequencerCheck",
                  name: "oracle",
                  type: "address",
                },
                {
                  internalType: "uint8",
                  name: "decimals",
                  type: "uint8",
                },
              ],
              indexed: false,
              internalType: "struct PaymentTokenInfo",
              name: "paymentTokenInfo",
              type: "tuple",
            },
          ],
          name: "SetPaymentTokenInfo",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepNative",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepToken",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
          ],
          name: "Update",
          type: "event",
        },
        {
          inputs: [],
          name: "VERSION",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "baseCurrency",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "buyWithNative",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "quantity",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "buyWithToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "buyerTotal",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "config",
          outputs: [
            {
              internalType: "address payable",
              name: "recipient",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "saleMaximum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "userMaximum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "purchaseMinimum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "maxQueueTime",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "URI",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "merkleRoot",
              type: "bytes32",
            },
          ],
          name: "generatePseudorandomValue",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "buyer",
              type: "address",
            },
          ],
          name: "getFairQueueTime",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
          ],
          name: "getOraclePrice",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
          ],
          name: "getPaymentToken",
          outputs: [
            {
              components: [
                {
                  internalType: "contract IOracleOrL2OracleWithSequencerCheck",
                  name: "oracle",
                  type: "address",
                },
                {
                  internalType: "uint8",
                  name: "decimals",
                  type: "uint8",
                },
              ],
              internalType: "struct PaymentTokenInfo",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
            {
              internalType: "string",
              name: "_baseCurrency",
              type: "string",
            },
            {
              internalType: "bool",
              name: "_nativePaymentsEnabled",
              type: "bool",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "_nativeTokenPriceOracle",
              type: "address",
            },
            {
              internalType: "contract IERC20Upgradeable[]",
              name: "tokens",
              type: "address[]",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck[]",
              name: "oracles",
              type: "address[]",
            },
            {
              internalType: "uint8[]",
              name: "decimals",
              type: "uint8[]",
            },
          ],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "isOpen",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "isOver",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "root",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "isValidMerkleProof",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "metrics",
          outputs: [
            {
              internalType: "uint256",
              name: "purchaseCount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "buyerCount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "purchaseTotal",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nativeTokenPriceOracle",
          outputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "",
              type: "address",
            },
          ],
          name: "paymentTokens",
          outputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
            {
              internalType: "uint8",
              name: "decimals",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "dest",
              type: "address",
            },
          ],
          name: "payments",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_distributor",
              type: "address",
            },
          ],
          name: "registerDistributor",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "sweepNative",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
          ],
          name: "sweepToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenQuantity",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "tokenDecimals",
              type: "uint256",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
          ],
          name: "tokensToBaseCurrency",
          outputs: [
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "total",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
          ],
          name: "update",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address payable",
              name: "payee",
              type: "address",
            },
          ],
          name: "withdrawPayments",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  80001: {
    FlatPriceSaleFactory_v_2_1: {
      address: "0xfAD5031a6a40952c2820f17dAc16F32896Cd058e",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_implementation",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "implementation",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract FlatPriceSale_v_2_1",
              name: "clone",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "string",
              name: "baseCurrency",
              type: "string",
            },
            {
              indexed: false,
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "nativeOracle",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "nativePaymentsEnabled",
              type: "bool",
            },
          ],
          name: "NewSale",
          type: "event",
        },
        {
          inputs: [],
          name: "VERSION",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "implementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
            {
              internalType: "string",
              name: "_baseCurrency",
              type: "string",
            },
            {
              internalType: "bool",
              name: "_nativePaymentsEnabled",
              type: "bool",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "_nativeTokenPriceOracle",
              type: "address",
            },
            {
              internalType: "contract IERC20Upgradeable[]",
              name: "tokens",
              type: "address[]",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck[]",
              name: "oracles",
              type: "address[]",
            },
            {
              internalType: "uint8[]",
              name: "decimals",
              type: "uint8[]",
            },
          ],
          name: "newSale",
          outputs: [
            {
              internalType: "contract FlatPriceSale_v_2_1",
              name: "sale",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    FlatPriceSale_v_2_1: {
      address: "0x662d39a9Ac0c0Cd9210E519AedA7F76e967e4492",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_feeBips",
              type: "uint256",
            },
            {
              internalType: "address payable",
              name: "_feeRecipient",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "buyer",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "baseCurrencyValue",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenValue",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenFee",
              type: "uint256",
            },
          ],
          name: "Buy",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address payable",
              name: "feeRecipient",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "feeBips",
              type: "uint256",
            },
          ],
          name: "ImplementationConstructor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "string",
              name: "baseCurrency",
              type: "string",
            },
            {
              indexed: false,
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "nativeOracle",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "nativePaymentsEnabled",
              type: "bool",
            },
          ],
          name: "Initialize",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "distributor",
              type: "address",
            },
          ],
          name: "RegisterDistributor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "contract IOracleOrL2OracleWithSequencerCheck",
                  name: "oracle",
                  type: "address",
                },
                {
                  internalType: "uint8",
                  name: "decimals",
                  type: "uint8",
                },
              ],
              indexed: false,
              internalType: "struct PaymentTokenInfo",
              name: "paymentTokenInfo",
              type: "tuple",
            },
          ],
          name: "SetPaymentTokenInfo",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepNative",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepToken",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
          ],
          name: "Update",
          type: "event",
        },
        {
          inputs: [],
          name: "VERSION",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "baseCurrency",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "buyWithNative",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "quantity",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "buyWithToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "buyerTotal",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "config",
          outputs: [
            {
              internalType: "address payable",
              name: "recipient",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "saleMaximum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "userMaximum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "purchaseMinimum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "maxQueueTime",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "URI",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "merkleRoot",
              type: "bytes32",
            },
          ],
          name: "generatePseudorandomValue",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "buyer",
              type: "address",
            },
          ],
          name: "getFairQueueTime",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
          ],
          name: "getOraclePrice",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
          ],
          name: "getPaymentToken",
          outputs: [
            {
              components: [
                {
                  internalType: "contract IOracleOrL2OracleWithSequencerCheck",
                  name: "oracle",
                  type: "address",
                },
                {
                  internalType: "uint8",
                  name: "decimals",
                  type: "uint8",
                },
              ],
              internalType: "struct PaymentTokenInfo",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
            {
              internalType: "string",
              name: "_baseCurrency",
              type: "string",
            },
            {
              internalType: "bool",
              name: "_nativePaymentsEnabled",
              type: "bool",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "_nativeTokenPriceOracle",
              type: "address",
            },
            {
              internalType: "contract IERC20Upgradeable[]",
              name: "tokens",
              type: "address[]",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck[]",
              name: "oracles",
              type: "address[]",
            },
            {
              internalType: "uint8[]",
              name: "decimals",
              type: "uint8[]",
            },
          ],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "isOpen",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "isOver",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "root",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "isValidMerkleProof",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "metrics",
          outputs: [
            {
              internalType: "uint256",
              name: "purchaseCount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "buyerCount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "purchaseTotal",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nativeTokenPriceOracle",
          outputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "",
              type: "address",
            },
          ],
          name: "paymentTokens",
          outputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
            {
              internalType: "uint8",
              name: "decimals",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "dest",
              type: "address",
            },
          ],
          name: "payments",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_distributor",
              type: "address",
            },
          ],
          name: "registerDistributor",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "sweepNative",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
          ],
          name: "sweepToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenQuantity",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "tokenDecimals",
              type: "uint256",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
          ],
          name: "tokensToBaseCurrency",
          outputs: [
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "total",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
          ],
          name: "update",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address payable",
              name: "payee",
              type: "address",
            },
          ],
          name: "withdrawPayments",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
